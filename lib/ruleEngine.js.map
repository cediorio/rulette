{"version":3,"sources":["../src/ruleEngine.js"],"names":["ParseError","Error","constructor","message","name","RuleBase","createRuleTree","ast","graph","parent","_parseASTNode","testIdentifier","node","type","processBinary","left","right","root","createNode","nodeType","operator","addEdge","newLeftNode","newRightNode","processNotOperator","notNode","argument","notOperandNode","parseRule","rule","jsep","addUnaryOp","addBinaryOp","err","Fact","Node","args","validValues","displayQuestion","factDescription","_validValues","_displayQuestion","_factDescription","Rule","lhs","rhs","trueDisplayValue","falseDisplayValue","topic","source","notes","_lhs","_rhs","_trueDisplayValue","_falseDisplayValue","_topic","_source","_notes","createKB","facts_range","rules_range","facts","i","length","push","rules","forEach","conditions","buildFactEvalStr","evalStr","value","toLowerCase","join","fire","kb","setAgenda","ruleResultsJSON","openFacts","closedFacts","factEvalStr","resultText","lhs_facts","tokenize","ruleEvalStr","result","vm","runInContext","sandbox","map","fact","getFactStatus","support_description","functionNames","filter","e","evalF","val","rule_match","s","tokens","split","token_map","token","trim","agenda","inAgenda","indexOf","unshift","printAgenda"],"mappings":"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","sourcesContent":["/** Define classes for RuleBase **/\n\nimport { Graph, Node } from './graph';\nimport jsep from 'jsep';\n\nclass ParseError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ParseError\";\n  }\n}\n\nexport class RuleBase {\n\n    static createRuleTree( ast, graph ) {\n\t// debugger;\n\tif ( !graph ) throw new Error( \"createRuleTree requires a graph object as its second parameter.\");\n\tlet parent = null;\n\tthis._parseASTNode( ast, graph, parent );\n\treturn graph;\n    }\n\n    static _parseASTNode( ast, graph, parent ) {\n\t\n\t// check to see if the type is 'Identifier' in which\n\t// case it's a variable name and we can create a\n\t// prop(osition) node for it\n\tconst testIdentifier = ( node ) => { return ( node && node.type === 'Identifier' ) ? true : false; };\n\tconst processBinary = ( ) => {\n\t    const left = ast.left;\n\t    const right = ast.right;\n\t    // process the operator itself (the root of this iteration)\n\t    const root = graph.createNode( { nodeType: ast.operator } );\n\t    graph.addEdge( parent, root.name );\n\n\t    let newLeftNode, newRightNode;\n\t    // process the left side\n\t    \n\t    if ( testIdentifier( left ) ) {\n\t\tnewLeftNode = graph.createNode( { name: left.name, nodeType: 'prop' } );\n\t\tgraph.addEdge( root.name, newLeftNode.name ); \n\t    } else this._parseASTNode( right, graph, root.name );\n\n\t    // process the right side\n\t    if ( testIdentifier( right ) ) {\n\t\tnewRightNode = graph.createNode( { name: right.name, nodeType: 'prop' } );\n\t\tgraph.addEdge( root.name, newRightNode.name ); \n\t    } else this._parseASTNode( right, graph, root.name );\n\t};\n\tconst processNotOperator = () => {\n\t    const notNode = graph.createNode( { nodeType: 'not' } );\n\t    graph.addEdge( parent, notNode.name );\n\t    \n\t    if ( ast.argument.type === 'Identifier' ) {\n\t\tconst notOperandNode = graph.createNode( { name: ast.argument.name, nodeType: 'prop' });\n\t\tgraph.addEdge( notNode.name, notOperandNode.name );\n\t    } else this._parseASTNode( ast.argument, graph, notNode.name );\n\t};\n\t\n\tswitch ( ast.type ) {\n\tcase 'BinaryExpression':\n\t    switch ( ast.operator ) {\n\t    case 'then':\n\t\tif ( ast.right &&  ast.right.type === 'Identifier' ) {\n\t\t    const parent = graph.createNode( {name: ast.right.name, nodeType: 'prop' } );\n\t\t    this._parseASTNode(ast.left, graph, parent.name);\n\t\t}\n\t\tbreak;\n\t    case 'and':\n\t    case 'or':\n\t\tprocessBinary();\n\t\tbreak;\n\t    default:\n\t\tthrow new ParseError(`_parseASTNode could not parse the BinaryExpression with the following properties:\n\t\t\t\t\toperator: ${ast.operator}\n\t\t\t\t\t\n\t\t\t\t`);\n\t    }\n\t    break;\n\tcase 'UnaryExpression':\n\t    switch( ast.operator) {\n\t    case 'not':\n\t\tprocessNotOperator();\n\t\tbreak;\n\t    default:\n\t\tthrow new ParseError(`_parseASTNode could not parse the UnaryExpression that had a ${ast.operator} operator`);\n\t    }\n\t    break;\n\tdefault:\n\t    throw new ParseError(`_parseASTNode could not parse the ast.type - parameters passed in were:\n\t\t\t\t\tast.type:\t${ast.type}\n\t\t\t\t\tast.operator:\t${ast.operator}`);\n\t}\n    }\n    \n    static parseRule ( rule ) {\n\n\t// add custom operators\n\n\tjsep.addUnaryOp('not', 10);\n\tjsep.addBinaryOp('and', 10);\n\tjsep.addBinaryOp('or', 10);\n\tjsep.addBinaryOp('then', 1);\n\n\ttry {\n\t    return jsep(rule);\n\t} catch (err) {\n\t    throw new ParseError(`jsep encountered the following error parsing the supplied rule text:\n\t\tRULE TEXT:\t\t${rule}\n\t\tJSEP ERROR:\t\t${err}`);\n\t}\n    }\n}\n\nexport class Fact extends Node {\n    constructor ( args = { name: null, validValues: null, displayQuestion: null, factDescription: null } ) {\n\tlet { name, validValues, displayQuestion, factDescription } = args;\n\tsuper( {name: name} );\n\tthis._validValues = validValues;\n\tthis._displayQuestion = displayQuestion;\n\tthis._factDescription = factDescription;\n    }\n}\n\nexport class Rule extends Node {\n    constructor( args = {\n\tname: null,\n\tlhs: null,\n\trhs: null,\n\ttrueDisplayValue: null,\n\tfalseDisplayValue: null,\n\ttopic: null,\n\tsource: null,\n\tnotes: null\n    } ) {\n\tlet { name, lhs, rhs, trueDisplayValue, falseDisplayValue, topic, source, notes } = args;\n\tsuper( { name: name } );\n\tthis._lhs = lhs;\n\tthis._rhs = rhs;\n\tthis._trueDisplayValue = trueDisplayValue;\n\tthis._falseDisplayValue = falseDisplayValue;\n\tthis._topic = topic;\n\tthis._source = source;\n\tthis._notes = notes;\n    }\n}\n\nfunction createKB(facts_range = [], rules_range = []) {\n  /* takes a fact object and rules object\n\t   and returns a kb object\n\t*/\n\n  var facts = [];\n\n  for (let i = 0; i < facts_range.length; i++) {\n    facts.push(new Fact(facts_range[i]));\n  }\n\n  var rules = [];\n  rules_range.forEach(function(rule) {\n    if (rule.conditions !== \"\") rules.push(new Rule(rule));\n  });\n\n  return {\n    facts,\n    rules\n  };\n}\n\nfunction buildFactEvalStr(facts) {\n  var evalStr = [];\n  for (let i = 0; i < facts.length; i++) {\n    // facts[i].name = parseNames(facts[i].name); // clean the syntax if necessary\n    if (facts[i].name === \"\") continue; // skip if there is no fact on this line\n    if (facts[i].value === \"UNKNOWN\") facts[i].value = null;\n    evalStr.push(\n      \"var \" + facts[i].name + \" = \" + facts[i].value.toLowerCase() + \";\"\n    ); // otherwise build the string for eval\n  }\n  return evalStr.join(\"\\n\") + \"\\n\\n\";\n}\n\nfunction fire(kb) {\n  //set up a sandbox context for evaluation\n\n  var rules = setAgenda(kb.rules);\n  var facts = kb.facts;\n  var ruleResultsJSON = []; // full report on results of Rule evaluation\n  var openFacts = []; // Facts which have no answers yet\n  var closedFacts = []; // Facts which have been answered\n  var factEvalStr = buildFactEvalStr(facts);\n  // evaluate the rules\n  for (let i = 0; i < rules.length; i++) {\n    let resultText = \"\";\n    if (rules[i].lhs === \"\") continue; // skip if there is no rule on this line\n    let lhs_facts = tokenize(rules[i].lhs);\n    let ruleEvalStr = rules[i].lhs;\n    let result = vm.runInContext(factEvalStr + \"\\n\" + ruleEvalStr, sandbox);\n\n    if (result) {\n      resultText = rules[i].trueDisplayValue;\n      vm.runInContext(\"var \" + rules[i].rhs + \" = true;\", sandbox); // assert the right-hand of the rule\n      rules[i].value = true;\n    } else {\n      resultText = rules[i].falseDisplayValue;\n      vm.runInContext(\"var \" + rules[i].rhs + \" = false;\", sandbox); // deny the right-hand of the rule\n      rules[i].value = false;\n    }\n    // console.log('this topic is: ' + rules[i].topic);\n    ruleResultsJSON.push({\n      name: rules[i].name,\n      lhs: rules[i].lhs,\n      rhs: rules[i].rhs,\n      value: rules[i].value,\n      topic: rules[i].topic,\n      source: rules[i].source,\n      result: resultText,\n      facts: lhs_facts.map(function(i) {\n        var fact = getFactStatus(i, kb);\n        // var support_desc = !!fact.factDescription ? fact.factDescription : \"No further support provided\";\n        return {\n          name: fact.name,\n          value: fact.value,\n          support_description: fact.factDescription\n        };\n      })\n    });\n  }\n  // console.log(resultsJSON);\n  return {\n    ruleResultsJSON,\n    openFacts,\n    closedFacts\n  };\n}\n\nfunction getFactStatus(i, kb) {\n  var facts = kb.facts;\n  var rules = kb.rules;\n  // console.log(\"this fact is: \" + i);\n  // this is a list of stopwords that are utility function names in this module\n  // if the \"fact\" is a function, we'll eval it and return the fact status\n  var functionNames = [\"getYear\", \"getMonth\"];\n  if (\n    functionNames.filter(function(e) {\n      return e === i;\n    }).length > 0\n  ) {\n    var evalF = i + \"()\";\n    var val = vm.runInContext(evalF, sandbox);\n    return {\n      name: i,\n      value: val,\n      support_description: \"Utility function evaluation\"\n    };\n  }\n  var fact = facts.filter(function(e) {\n    return e.name === i;\n  })[0];\n  // if the condition wasn't in facts, then it must be in rules\n  if (typeof fact === \"undefined\") {\n    var rule_match = rules.filter(function(e) {\n      return e.name === i;\n    })[0];\n    return {\n      name: rule_match.name,\n      value: rule_match.value,\n      support_description: \"Rule evaluation\"\n    };\n  }\n  return fact;\n}\n\nfunction tokenize(s) {\n  if (s === true) return s;\n  var tokens = s.split(/[^\\b\\w\\b]|\\b\\d\\b/g);\n  var token_map = tokens.map(function(i) {\n    var token = i.trim();\n    return token;\n  });\n  // return token_map;\n  return token_map.filter(function(e) {\n    return e.length > 0;\n  });\n}\n\nfunction setAgenda(rules) {\n  var agenda = [];\n  // get all the rule names\n  // var rule_names = rules.map(function(rule) {\n  //   return rule.name;\n  // });\n\n  rules.forEach(function(rule) {\n    var inAgenda = false; // flag to mark presence of rule in agenda\n    for (let i = 0; i < agenda.length; i++) {\n      // tokenize each lhs and check to see if the current rule.rhs is in it\n      var tokens = tokenize(agenda[i].lhs);\n      // if it is in the agenda, put it at the front of the agenda and bail\n      if (tokens.indexOf(rule.rhs) > -1) {\n        inAgenda = true;\n        agenda.unshift(rule);\n        break;\n      }\n    }\n    // if the previous for loop didn't find the current rule.rhs in the agenda,\n    // push it onto the end of the agenda\n    if (!inAgenda) agenda.push(rule);\n  });\n\n  return agenda;\n}\n\nfunction printAgenda(agenda) {\n  return agenda\n    .map(function(i) {\n      return \"LHS: \" + i.lhs + \" RHS: \" + i.rhs;\n    })\n    .join(\" \\n\");\n}\n\n// function getYear() {\n//   var d = new Date();\n//   return d.getFullYear();\n// }\n\n// function getMonth() {\n//   var d = new Date();\n//   return d.getMonth();\n// }\n\nexport default { fire, createKB, printAgenda };\n"],"file":"ruleEngine.js"}